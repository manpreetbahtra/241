//when going from pcap_next to pcap_loop, I did the following removals:

// from inside sniff - struct pcap_pkthdr header;
//   const unsigned char *packet;


  /* while (1) {
    // Capture a  packet
    //packet is a pointer to the packet data
    //packet =*data
    packet = pcap_next(pcap_handle, &header);
    if (packet == NULL) {
      // pcap_next can return null if no packet is seen within a timeout
      if (verbose) {
        printf("No packet received. %s\n", pcap_geterr(pcap_handle));
      }
    } else {
      // If verbose is set to 1, dump raw packet to terminal
      if (verbose) {
        dump(packet, header.len);
        
      }
      // Dispatch packet for processing
      dispatch(&header, packet, verbose);
    }
  } */



  //pcap_open_live opens a device for capturing. it returns a pointer to a pcap_t structure which is a handle that can be used for packet capture.  
// a handle denotes a packet capturing session